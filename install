#!/usr/bin/env bash

declare -a exclusion=(install original_backup)

#git clone --recursive git://github.com/cello1500/dotfiles.git
#git submodule update --init --recursive "${DOTBOT_DIR}"

in_array() {
    local haystack=${1}[@]
    local needle=${2}
    for i in ${!haystack}; do
        if [[ ${i} == ${needle} ]]; then
            return 0
        fi
    done
    return 1
}

shopt -s nullglob

for f in ~/.dotfiles/*
do
	filename=${f##*/}
	if in_array exclusion $filename; then
		continue
	fi
	if [ -e ~/.$filename ] && [ ! -L ~/.$filename ]; then
		mkdir -p ~/.dotfiles/original_backup
		mv ~/.$filename ~/.dotfiles/original_backup/
	fi

	ln -fsv $f ~/.$filename
done

if [[ `uname -r` == *"ARCH" ]]; then
	sudo pacman -S --needed --noconfirm git
	sudo pacman -S --needed --noconfirm python
	sudo pacman -S --needed --noconfirm lua
	sudo pacman -S --needed --noconfirm vim
	sudo pacman -S --needed --noconfirm curl
	sudo pacman -S --needed --noconfirm tmux
	sudo pacman -S --needed --noconfirm git
	sudo pacman -S --needed --noconfirm bash-completion
fi

if [ -d "/usr/local/go" ]; then
	export GOPATH=~/code/go
	export PATH=$PATH:/usr/local/go/bin:${GOPATH//://bin:}/bin
fi

curl -o ~/.git-completion.bash  https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash
curl -o ~/.git-prompt.sh  https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh
git clone https://github.com/magicmonty/bash-git-prompt.git ~/.bash-git-prompt --depth=1

# Install latest VIM Pathogen
mkdir -p ~/.vim/autoload ~/.vim/bundle
curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim

# install lastest VIM Syntastic
if [ -e ~/.vim/bundle/syntastic ]; then
	rm -rf  ~/.vim/bundle/syntastic
fi
git clone https://github.com/scrooloose/syntastic.git ~/.vim/bundle/syntastic

# Install lastest VIM Sensible
if [ -e  ~/.vim/bundle/vim-sensible ]; then
	rm -rf  ~/.vim/bundle/vim-sensible
fi
git clone git://github.com/tpope/vim-sensible.git ~/.vim/bundle/vim-sensible

# Install lastest VIM vim-go
if [ -e  ~/.vim/bundle/vim-sensible ]; then
	rm -rf  ~/.vim/bundle/vim-go
fi
git clone https://github.com/fatih/vim-go.git ~/.vim/bundle/vim-go
vim -c "GoInstallBinaries" -c "qa"

# Install lastest VIM tagbar (package ctags needs to be installed previously)
if [ -e  ~/.vim/bundle/tagbar ]; then
	rm -rf  ~/.vim/bundle/tagbar
fi
git clone https://github.com/majutsushi/tagbar

# Install lastest VIM NERDTree
if [ -e  ~/.vim/bundle/nerdtree ]; then
	rm -rf  ~/.vim/bundle/nerdtree
fi
git clone https://github.com/scrooloose/nerdtree ~/.vim/bundle/nerdtree

# Install lastest VIM lightline
if [ -e  ~/.vim/bundle/lightline ]; then
	rm -rf  ~/.vim/bundle/lightline
fi
git clone https://github.com/itchyny/lightline.vim ~/.vim/bundle/lightline

# Install lastest VIM neocomplete
if [ -e  ~/.vim/bundle/neocomplete ]; then
	rm -rf  ~/.vim/bundle/neocomplete
fi
git clone https://github.com/Shougo/neocomplete.vim.git ~/.vim/bundle/neocomplete

# Install lastest VIM ultiSnips
if [ -e  ~/.vim/bundle/ultisnips ]; then
	rm -rf  ~/.vim/bundle/ultisnips
fi
git clone https://github.com/SirVer/ultisnips.git ~/.vim/bundle/ultisnips

# Install lastest VIM vim-choosewin
if [ -e  ~/.vim/bundle/vim-choosewin ]; then
	rm -rf  ~/.vim/bundle/vim-choosewin
fi
git clone https://github.com/t9md/vim-choosewin.git ~/.vim/bundle/vim-choosewin

# Install VIM crlp.vim (used by vim-go)
if [ -e  ~/.vim/bundle/ctrlp.vim ]; then
	rm -rf  ~/.vim/bundle/ctrlp.vim
fi
git clone https://github.com/ctrlpvim/ctrlp.vim.git ~/.vim/bundle/ctrlp.vim

# Install lastest VIM splitjoin
if [ -e  ~/.vim/bundle/splitjoin ]; then
	rm -rf  ~/.vim/bundle/splitjoin
fi
git clone git://github.com/AndrewRadev/splitjoin.vim.git ~/.vim/bundle/splitjoin

# Install VIM Conque-Term
vim 'https://conque.googlecode.com/files/conque_2.3.vmb' -c ':so % | q'

# Rebuild the help tag files for the pluggins
vim -c "Helptags" -c "qa"

# Cleanup
if [ -L ~/.dotfiles/vim/vim ]; then
	rm ~/.dotfiles/vim/vim
fi
