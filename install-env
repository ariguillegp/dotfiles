#!/usr/bin/env bash

## Do not make soft links out of these file system objects
declare -a exclusion=(i3 install-docker install-env install-golang install-root install-vim install-terraform original_backup README.md)

in_array() {
    local haystack=${1}[@]
    local needle=${2}
    for i in ${!haystack}; do
        if [[ ${i} == ${needle} ]]; then
            return 0
        fi
    done
    return 1
}

shopt -s nullglob

for f in ~/.dotfiles/*
do
	filename=${f##*/}
	if in_array exclusion $filename; then
		continue
	fi
	if [ -e ~/.$filename ] && [ ! -L ~/.$filename ]; then
		mkdir -p ~/.dotfiles/original_backup
		mv ~/.$filename ~/.dotfiles/original_backup/
	fi

	ln -fsv $f ~/.$filename
done

## Install packages for setting personalized environment
sudo pacman -S --needed --noconfirm python lua curl tmux git bash-completion xorg-server \
	                            xorg-xinit rofi terminator scrot imagemagick feh arandr \
				    shellcheck jq ncdu wget bluez bluez-utils pulseaudio-bluetooth \
				    ttf-font-awesome materia-gtk-theme pacman-contrib papirus-icon-theme \
				    lxappearance ttf-ubuntu-font-family ttf-droid picom pulseaudio-alsa \
				    pulseaudio-equalizer pulseaudio-jack alsa-utils playerctl 
## Needs confirmation
sudo pacman -S i3 --needed i3
## Copy i3 config files
cp -R i3/ ~/.config/i3/

# Start bluetooth service
sudo systemctl enable bluetooth

# If you have a system-wide PulseAudio setup make sure the user running the daemon (usually pulse) is in the lp group and you load the bluetooth modules in your PulseAudio config:
echo "load-module module-bluetooth-policy" >> /etc/pulse/system.pa
echo "load-module module-bluetooth-discover" >> /etc/pulse/system.pa

# create an ssh key in case we don't have it yet
if [ ! -e "~/.ssh/id_rsa" ]; then
	echo -e  'y\n' | ssh-keygen -t rsa -b 4096 -C "ariguille.gp@gmail.com" -q -f ~/.ssh/id_rsa -N "" > /dev/null
fi

# support for git commands completion on bash
curl -o ~/.git-completion.bash  https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash

# checks git repo status in your prompt
rm -rf ~/.bash-git-prompt 2> /dev/null
git clone https://github.com/magicmonty/bash-git-prompt.git ~/.bash-git-prompt --depth=1

